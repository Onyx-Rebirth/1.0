// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using OnyxSAT.Data;
using System;

namespace OnyxSAT.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20170823075009_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnyxSAT.Models.Attendance", b =>
                {
                    b.Property<DateTime>("DateTime");

                    b.Property<int>("CardNo");

                    b.Property<bool>("Verified");

                    b.HasKey("DateTime");

                    b.HasIndex("CardNo");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("OnyxSAT.Models.Card", b =>
                {
                    b.Property<int>("CardNo");

                    b.Property<int?>("StudentUserId");

                    b.HasKey("CardNo");

                    b.HasIndex("StudentUserId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("OnyxSAT.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DayOfWeek")
                        .IsRequired();

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<DateTime>("StartTime");

                    b.Property<int?>("TeacherUserId");

                    b.HasKey("ClassId");

                    b.HasIndex("TeacherUserId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("OnyxSAT.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("OnyxSAT.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasMaxLength(10);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("OnyxSAT.Models.UserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("OnyxSAT.Models.Student", b =>
                {
                    b.HasBaseType("OnyxSAT.Models.User");

                    b.Property<int>("StudentId");

                    b.ToTable("Student");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("OnyxSAT.Models.Teacher", b =>
                {
                    b.HasBaseType("OnyxSAT.Models.User");

                    b.Property<int>("StaffId");

                    b.ToTable("Teacher");

                    b.HasDiscriminator().HasValue("Teacher");
                });

            modelBuilder.Entity("OnyxSAT.Models.Attendance", b =>
                {
                    b.HasOne("OnyxSAT.Models.Card", "Card")
                        .WithMany("Attendances")
                        .HasForeignKey("CardNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnyxSAT.Models.Card", b =>
                {
                    b.HasOne("OnyxSAT.Models.Student", "Student")
                        .WithMany("Cards")
                        .HasForeignKey("StudentUserId");
                });

            modelBuilder.Entity("OnyxSAT.Models.Class", b =>
                {
                    b.HasOne("OnyxSAT.Models.Teacher", "Teacher")
                        .WithMany("Classes")
                        .HasForeignKey("TeacherUserId");
                });

            modelBuilder.Entity("OnyxSAT.Models.UserRole", b =>
                {
                    b.HasOne("OnyxSAT.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnyxSAT.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
